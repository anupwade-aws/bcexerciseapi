{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAC1B,qEAAiE;AACjE,yCAAsC;AACtC,0CAA0C;AAC1C,4CAAqC;AACrC,uDAAoD;AACpD,uCAAqC;AAGrC,IAAI,SAAS,GAAG,IAAI,qBAAS,EAAE,CAAC;AAChC,SAAS,CAAC,IAAI,CAAc,eAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,yBAAW,CAAC,CAAC;AAG/D,IAAI,MAAM,GAAG,IAAI,gDAAsB,CAAC,SAAS,CAAC,CAAC;AAEnD,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;IACvB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACnD,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC;AAEH,IAAI,cAAc,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;AACpC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAE5B,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC","sourcesContent":["import \"reflect-metadata\";\nimport { InversifyExpressServer } from \"inversify-express-utils\";\nimport { Container } from \"inversify\";\nimport * as bodyParser from \"body-parser\";\nimport TYPES from \"./constant/types\";\nimport { DataService } from \"./service/DataService\";\nimport \"./controller/DataController\";\n\n// load everything needed to the Container\nlet container = new Container();\ncontainer.bind<DataService>(TYPES.DataService).to(DataService);\n\n// start the server\nlet server = new InversifyExpressServer(container);\n\nserver.setConfig((app) => {\n  app.use(bodyParser.urlencoded({ extended: true }));\n  app.use(bodyParser.json());\n});\n\nlet serverInstance = server.build();\nserverInstance.listen(3000);\n\nconsole.log(\"Server started on port 3000 :)\");\n"]}